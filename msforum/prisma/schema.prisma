generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Article {
  idart     Int      @id @default(autoincrement())
  content   String
  user_id   String
  idcat     Int?
  title     String
  datetime  DateTime @default(now())

  category  Category? @relation(fields: [idcat], references: [idcat])
  author    Userdata  @relation(fields: [user_id], references: [user_id])
  comments  Comment[]

  @@map("article")
}

model Category {
  idcat       Int       @id @default(autoincrement())
  name        String
  description String

  articles    Article[]

  @@map("category")
}

model Comment {
  idcomment Int      @id @default(autoincrement())
  content   String
  idart     Int
  user_id   String
  reply_to  Int?
  upvotes   Int      @default(0)
  datetime  DateTime @default(now())

  article   Article  @relation(fields: [idart], references: [idart])
  author    Userdata @relation(fields: [user_id], references: [user_id])

  @@map("comment")
}

model Draft {
  draftid  Int   @id @default(autoincrement())
  title    String
  content  String
  date     DateTime
  archived Boolean  @default(false)
  user_id  String

  author   Userdata @relation(fields: [user_id], references: [user_id])

  @@map("draft")
}

model Subscriptions {
  idsub       Int       @id @default(autoincrement())
  name        String
  description String

  users       Userdata[]

  @@map("subscriptions")
}

model Userdata {
  user_id        String        @id
  email          String
  username       String @unique
  idsub          Int?
  bio            String? @db.VarChar(256)
  readme         String? @db.VarChar(1024)
  profile_picture String?

  subscription   Subscriptions? @relation(fields: [idsub], references: [idsub])
  articles       Article[]
  comments       Comment[]
  drafts         Draft[]

  @@map("userdata")
}
